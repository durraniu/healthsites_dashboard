---
title: "Health Sites in Canada and Pakistan"
categories: [HDX]
echo: false
format: 
  dashboard:
    orientation: columns
    nav-buttons: [Data]
    Data: https://data.humdata.org/dataset/?q=healthsites&sort=last_modified%20desc&ext_page_size=25
---

```{r}
#| echo: false
#| message: false
library(tidyverse)
library(sf)
library(forcats)
library(rlang)
library(leaflet)
library(leaflet.extras)
library(leafem)
```

```{r}
#| label: Read and process data
#| echo: false
#| message: false
can_health <- sf::st_read(here::here("data/canada.geojson"), quiet = TRUE)
pak_health <- sf::st_read(here::here("data/pakistan.geojson"), quiet = TRUE)

# Functions
process_data <- function(dataa){
  dataa |> 
    dplyr::filter(st_geometry_type(geometry) == "POINT") |> 
    dplyr::mutate(
      amenity = ifelse(amenity == "", "Unknown", amenity),
      healthcare = ifelse(healthcare == "", "Unknown", healthcare)
  )
}

lump_and_infreq <- function(dataa){
  dataa |> 
    dplyr::mutate(
      amenity = fct_lump(amenity, n = 5, other_level = "Other"),
      healthcare = fct_lump(healthcare, n = 5, other_level = "Other"),
      
      amenity = stringr::str_to_title(amenity) |> 
        fct_infreq() |> 
        fct_rev(),
      healthcare = stringr::str_to_title(healthcare) |> 
        fct_infreq() |>  
        fct_rev()
      
  )
}

create_bar_plot <- function(dataa, var, country, 
                            # title_prefix, 
                            bar_color, text_color) {
  ggplot(dataa) +
    geom_bar(aes(y = {{ var }}), fill = bar_color) +
    geom_text(
      stat = "count",
      aes(
        y = {{ var }}, x = after_stat(count),
        label = after_stat(count)
      ),
      hjust = -0.1,
      color = text_color
    ) +
    labs(
      # title = paste0(title_prefix, country),
      x = NULL, y = NULL
    ) +
    expand_limits(x = max(table(dataa[[deparse(substitute(var))]])) * 1.1) +
    theme(
      plot.title.position = "plot",
      panel.grid.major = element_blank(),
      panel.grid.minor = element_blank(),
      axis.text.x = element_blank()
    )
}

create_map <- function(dataa){
  leaflet(data = dataa) |>
    # Set the base tile
    addTiles() |>
    addMarkers(
      clusterOptions = markerClusterOptions(), 
      popup = ~paste0(
        "<strong>Healthcare:</strong> ", healthcare, "<br>",
        "<strong>Name:</strong> ", name, "<br>",
        "<strong>Operator:</strong> ", operator, "<br>",
        "<strong>Emergency status:</strong> ", emergency, "<br>",
        "<strong>City:</strong> ", addr_city
      ), 
      label = ~amenity, 
      labelOptions = labelOptions(noHide = FALSE, direction = "auto")
    ) |> 
    addSearchOSM(
      options = searchOptions(
        collapsed = FALSE, 
        position = "topright" 
      )
    ) |> 
    addHomeButton(raster::extent(dataa), "Reset Zoom")
}


can_health <- process_data(can_health)
pak_health <- process_data(pak_health)

# Num of facilities
total_facilities_can <- nrow(can_health)
total_facilities_pak <- nrow(pak_health)

# ggplot theme
theme_set(theme_minimal(base_size = 25))

# colors
can_color <- "#D80621"
pak_color <- "#006600"
```

# Canada {.tabset}

## Column

### Row {height=25%}

```{r}
#| component: valuebox
#| title: Health sites in Canada
list(
  icon = "flag",
  # color = can_color,
  value = total_facilities_can
)
```



### Row {height=75%}

```{r}
#| title: Top Health Amenities
can_health_freq <- lump_and_infreq(can_health)

create_bar_plot(can_health_freq, amenity, "Canada", can_color, "black")
```



## Column

```{r}
#| title: Location of Health Amenities
create_map(can_health)
```




# Pakistan {.tabset}

## Column

### Row {height=25%}

```{r}
#| component: valuebox
#| title: Health sites in Pakistan
list(
  icon = "flag",
  # color = "info",
  value = total_facilities_pak
)
```


### Row {height=75%}

```{r}
#| title: Top Health Amenities
pak_health_freq <- lump_and_infreq(pak_health)

create_bar_plot(pak_health_freq, amenity, "Pakistan", pak_color, "black")
```


## Column

```{r}
#| title: Location of Health Amenities
create_map(pak_health)
```